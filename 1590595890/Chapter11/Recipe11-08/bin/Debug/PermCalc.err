System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> ManagedMD.ExpectedException: Not a valid PE file.  (Malformed Image Dos Header)
   at ManagedMD.ImageDosHeader..ctor(SafePointer sp)
   at ManagedMD.PEFile.get_DosHeader()
   at ManagedMD.COMPEFile.get_Cor20Header()
   at ManagedMD.COMPEFile.get_MetaData()
   at ManagedMD.Module..ctor(COMPEFile peFile)
   at System.Security.Tools.PermEngine.AddAssembliesToApplication(String[] applicationAssemblies, String[] assembliesToAnalyze)
   at System.Security.Tools.PermEngine..ctor(Byte[] blob)
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle._InvokeConstructor(Object[] args, SignatureStruct& signature, IntPtr declaringType)
   at System.RuntimeMethodHandle.InvokeConstructor(Object[] args, SignatureStruct signature, RuntimeTypeHandle declaringType)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
   at System.Activator.CreateInstanceFrom(String assemblyFile, String typeName, Boolean ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo)
   at System.AppDomain.CreateInstanceFrom(String assemblyFile, String typeName, Boolean ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
   at System.AppDomain.CreateInstanceFromAndUnwrap(String assemblyName, String typeName, Boolean ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
   at System.AppDomain.CreateInstanceFromAndUnwrap(String assemblyName, String typeName, Boolean ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
   at System.Security.Tools.RequiredPermissions.StartAnalysis()
   at System.Security.Tools.RequiredPermissions.AnalyzeApplicationInBackground()
   at System.Security.Tools.PermissionsCalculator.Analyze(String[] aAssemblyNames, AnalyzeFlags flags)
   at System.Security.Tools.PermissionsCalculator.Main(String[] args)
